pipeline {
    agent any
    environment {
        // Nom de l'image Docker
        DOCKER_IMAGE = 'jihed123/gr-conf-zipkin-client-ms1:0.0.1-SNAPSHOT'
        // Chemin du module Spring Boot
        MODULE_PATH = 'gr-conf-zipkin-client-ms1'
    }
    stages {
        stage('Checkout') {
            steps {
                // Récupérer le code depuis le dépôt Git
                checkout scm
            }
        }
        stage('Build Module') {
            steps {
                script {
                    // Construire uniquement le module Spring Boot
                    sh """
                        /opt/maven/bin/mvn clean package -pl ${MODULE_PATH} -am
                    """
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                script {
                    // Construire l'image Docker à partir du Dockerfile dans le module
                    dir(MODULE_PATH) {
                        sh """
                            docker build -t ${DOCKER_IMAGE} .
                        """
                    }
                }
            }
        }
		
//        stage('Push Docker Image') {
//            steps {
//                script {
//                    // Pousser l'image vers un registre (optionnel)
//                  docker.withRegistry('https://index.docker.io/v1/', 'docker-credentials-id') {
//                      sh """
//                         docker push ${DOCKER_IMAGE}
//                        """
//                    }
//                }
//            }
//        }
    }
    post {
        success {
            echo 'Image créée avec succès !'
        }
        failure {
            echo 'Echec du la création de limage !'
        }
    }
}